<<<<<<< HEAD
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(sum_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
ylab("Durchschnitt (€)")
ggplot(sum_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
ylab("Durchschnitt (€)")+
ggtitle("Umsatz im Monatsverlauf")
ggplot(sum_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Tage im Monat")+
ylab("Durchschnitt (€)")+
ggtitle("Umsatz im Monatsverlauf")
?xlim
ggplot(ware_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Monatstag")
ggcorr(sum_monatstage, method = c("everything", "pearson"))
library(GGally)
ggcorr(sum_monatstage, method = c("everything", "pearson"))
?ggcorr
ggcorr(sum_monatstage, method = c("pairwise", "pearson"))
View(sum_monatstage)
#Monatstage und Umsatzfiltern
gefilterte_sum_monatstage<-filter(sum_monatstage, monatstag, mean)
library(GGally)
ggcorr(gefilterte_sum_monatstage, method = c("everything", "pearson"))
View(gefilterte_sum_monatstage)
install.packages("ggridges")
#Balkendiagramm der Summe Umsätze je Jahr(ohne Konfidenzintervall)
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=summe), stat="identity") +
ylab("Summe(€)")+
facet_wrap(~jahr)+
ggtitle("Summe der  Warengruppe in den Jahren")
ggplot(ware_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Monatstag")
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Jahre")+
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
library(readr)
library(readr)
library(tidyverse)
library(readr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
#Erstellung der Variable mit Jahr
umsatz$jahr <- year(umsatz$Datum)
#Tabelle für den Umsatz nach Warengruppen  und Jahren
ware_jahr<- umsatz %>%
group_by(jahr, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# nach Warengruppe nach Jahren den Umsatz plotten
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~jahr)+
ggtitle("Umsatz nach Warengruppe und Jahr")
#Balkendiagramm der Summe Umsätze je Jahr(ohne Konfidenzintervall)
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=summe), stat="identity") +
ylab("Summe(€)")+
facet_wrap(~jahr)+
ggtitle("Summe der  Warengruppe in den Jahren")
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Jahr")+
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
umsatz$monatstag<- mday(umsatz$Datum)
sum_monatstage<- umsatz %>%
group_by(monatstag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(sum_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Tage im Monat")+
ylab("Durchschnitt (€)")+
ggtitle("Umsatz im Monatsverlauf")
ware_monatstage<- umsatz %>%
group_by(monatstag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(ware_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Monatstag")
View(ware_jahr)
View(sum_monatstage)
View(ware_jahr)
View(sum_monatstage)
View(ware_monatstage)
View(sum_monatstage)
#Summe der Jahre bilden
sum_jahre<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
View(sum_jahre)
#nach Tag zusammenfassen
umsatz$tag <- day(umsatz$Datum)
#Summe der Jahre bilden
sum_jahre<- umsatz %>%
group_by(day) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Summe der Jahre bilden
sum_jahre<- umsatz %>%
group_by(tag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Summe der Jahre bilden
sum_tage<- umsatz %>%
group_by(tag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
=======
<<<<<<< HEAD
>>>>>>> 7b40a82c8ae87b040c1fa51a33ba9b0d30f60395
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(sum_tage, aes(x=jahre, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Tage im Monat")+
ylab("Durchschnitt (€)")+
ggtitle("Umsatz im Monatsverlauf")
#nach Tag zusammenfassen
umsatz$tag <- day(umsatz$Datum)
#Summe der Jahre bilden
sum_tag<- umsatz %>%
group_by(tag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
ggplot(sum_tage, aes(x=tag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
ggtitle("Umsatz über den gesamten Zeitraum")
ggplot(sum_tage, aes(x=tag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
ggtitle("Umsatz über den gesamten Zeitraum")
View(sum_tag)
#nach Tag zusammenfassen
umsatz$tag <- date(umsatz$Datum)
#Summe der Jahre bilden
sum_tag<- umsatz %>%
group_by(tag) %>%
=======
# Confidence Interval
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres über alle Warengruppen")
my_sum_year<- umsatz %>%
group_by(jahr) %>%
b
my_sum_year<- umsatz %>%
group_by(jahr)
library(readr)
library(lubridate)
umsatz$jahr <- year(umsatz$Datum)
ggplot(umsatz) +
geom_bar(aes(x = jahr, y = Umsatz), stat = "identity")
library(readr)
library(lubridate)
library(lubridate)
=======
getwd()
setpwd()
getpwd()
pwd()
getwd()
Umsatz <- read.csv("umsatzdaten_gekuerzt.csv")
>>>>>>> 6f386506e11433e6a0d6049703b04cc0867ab6d9
library(ggplot2)
library(dplyr)
<<<<<<< HEAD
umsatz<-umsatzdaten_gekuerzt <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
#Visualsierung des Umsatzes f?r die Jahre 2013-2018 HAT NICHT FUNKTIONIERT
umsatz%>%
ggplot(aes(Umsatz))+
geom_freqpoly() #weil ein Monat etwa so viele Tage hat
umsatz$wochentag <- weekdays(umsatz$Datum)
ggplot(umsatz) +
geom_bar(aes(x = wochentag, y = Umsatz), stat = "identity")
ggplot(umsatz) +
geom_bar(aes(x = wochentag, y = Umsatz), stat = "identity")
#Balkendiagramm der Umsätze aller Warengruppen je Wochentag (ohne Konfidenzintervall)
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
#n ist einfach nur praktisch und z?hlt die Wochentage
my_sum_week<- umsatz %>%
group_by(wochentag) %>%
>>>>>>> 7b40a82c8ae87b040c1fa51a33ba9b0d30f60395
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
ggplot(sum_tage, aes(x=tag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
ggtitle("Umsatz über den gesamten Zeitraum")
View(umsatz)
#Summe der Jahre bilden
sum_tag<- umsatz %>%
group_by(Datum) %>%
=======
<<<<<<< HEAD
View(merge_Umsatzdaten_wetter)
# Balkendiagramm erstellen
ggplot(merge_Umsatzdaten_wetter, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_Umsatzdaten_wetter %>%
group_by(Temperatur) %>%
summarise(
n=n(),
=======
#Balkendiagramm der Umsätze aller Warengruppen je Wochentag (ohne Konfidenzintervall)
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
#n ist einfach nur praktisch und z?hlt die Wochentage
my_sum_week<- umsatz %>%
group_by(wochentag) %>%
>>>>>>> 7b40a82c8ae87b040c1fa51a33ba9b0d30f60395
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
ggplot(sum_tag, aes(x=Datum, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
ggtitle("Umsatz über den gesamten Zeitraum")
ggplot(sum_tag, aes(x=Datum, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab("Jahr")+
ylab("Durschnittlicher Umsatz (€)")
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
xlab("Jahr")+
ylab("Summe Umsatz (€)")
View(sum_tag)
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
geom_label(
data=sum_tag %>% filter(summe>=2000), # Filter data first
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=sum_tag %>% filter(summe>=2000), # Filter data first
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(umsatz, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
facet_wrap(~Warengruppe)
View(umsatz)
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
facet_wrap(~Warengruppe)
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
#geom_smooth(method=lm , color="red", se=FALSE) +
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
#Monat an den Datensatz heranhängen
umsatz$monat<- month(umsatz$Datum)
#Monat an den Datensatz heranhängen
umsatz$monat<- month(umsatz$Datum)
#den Umsatz nach den Monaten filtern
ware_monat<- umsatz %>%
group_by(monat, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
View(ware_monat)
geom_label(
data=data %>% filter(jahr>2 & wt>3), # Filter data first
aes(label=carName)+
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggtitle("Umsatz über den gesamten Zeitraum nach Warengruppen")+
geom_label(
data=data %>% filter(jahr>2 & wt>3), # Filter data first
aes(label=carName)+
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggtitle("Umsatz über den gesamten Zeitraum nach Warengruppen")+
geom_label(
data=data %>% filter(jahr>2 & wt>3), # Filter data first
aes(label=carName)+
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
ggtitle("Umsatz über den gesamten Zeitraum nach Warengruppen")+
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
geom_label(
data=data %>% filter(jahr>2 & wt>3), # Filter data first
aes(label=carName)+
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
ggtitle("Umsatz über den gesamten Zeitraum nach Warengruppen")+
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
ggtitle("Umsatz über den gesamten Zeitraum nach Warengruppen")
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
ggtitle ("Umsatz über den gesamten Zeitraum nach Warengruppen")
#den Umsatz nach den Monaten filtern
ware_monat<- umsatz %>%
group_by(monat, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1)))
#den Umsatz nach den Monaten filtern
ware_monat<- umsatz %>%
group_by(monat, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
View(ware_monat)
# nach Warengruppe in den unterschiedlichen Monaten den Umsatz plotten (Scatterplot)
ggplot(ware_monat, aes(x=monat, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Monat")
# nach Warengruppe in den unterschiedlichen Monaten den Umsatz plotten (Scatterplot)
ggplot(ware_monat, aes(x=monat, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
xlab("Monat")+
ylab("Durchschnittlicher Umsatz (€)")
library(readr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
#Erstellung der Variable mit Jahr
=======
# Confidence Interval
<<<<<<< HEAD
ggplot(my_sum) +
geom_bar( aes(x=Teamperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Teamperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
# Balkendiagramm erstellen
ggplot(merge_Umsatzdaten_wetter, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_Umsatzdaten_wetter %>%
group_by(Temperatur) %>%
summarise(
n=n(),
=======
ggplot(my_sum_week) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=wochentag, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz in der Woche ?ber alle Warengruppen")
>>>>>>> 7b40a82c8ae87b040c1fa51a33ba9b0d30f60395
umsatz$jahr <- year(umsatz$Datum)
#Tabelle für den Umsatz nach Warengruppen  und Jahren
ware_jahr<- umsatz %>%
group_by(jahr, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
# nach Warengruppe nach Jahren den Umsatz plotten
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~jahr)+
ggtitle("Umsatz nach Warengruppe und Jahr")
#Summe der Jahre bilden
sum_tag<- umsatz %>%
group_by(Datum) %>%
=======
# Confidence Interval
<<<<<<< HEAD
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Teamperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
# Balkendiagramm erstellen
ggplot(merge_Umsatzdaten_wetter, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_Umsatzdaten_wetter %>%
group_by(Temperatur) %>%
summarise(
n=n(),
=======
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
my_sum_year<- umsatz %>%
group_by(jahr) %>%
>>>>>>> 7b40a82c8ae87b040c1fa51a33ba9b0d30f60395
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=sum_tag %>% filter(summe>=2000), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
ggtitle ("Umsatz über den gesamten Zeitraum nach Warengruppen")
#Balkendiagramm der Summe Umsätze je Jahr(ohne Konfidenzintervall)
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=summe), stat="identity") +
ylab("Summe(€)")+
facet_wrap(~jahr)+
ggtitle("Summe der  Warengruppe in den Jahren")
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Jahr")+
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
umsatz$monatstag<- mday(umsatz$Datum)
sum_monatstage<- umsatz %>%
group_by(monatstag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(sum_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Tage im Monat")+
ylab("Durchschnitt (€)")+
ggtitle("Umsatz im Monatsverlauf")
```{r}
ware_monatstage<- umsatz %>%
group_by(monatstag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
ggplot(ware_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Monatstag")
#Monat an den Datensatz heranhängen
umsatz$monat<- month(umsatz$Datum)
#den Umsatz nach den Monaten filtern
ware_monat<- umsatz %>%
group_by(monat, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
# nach Warengruppe in den unterschiedlichen Monaten den Umsatz plotten (Scatterplot)
ggplot(ware_monat, aes(x=monat, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
xlab("Monat")+
ylab("Durchschnittlicher Umsatz (€)")
library(readr)
library(readr)
library(tidyverse)
library(lubridate)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
View(umsatz)
=======
# Confidence Interval
<<<<<<< HEAD
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
#Tabelle Umsatz und Wetter zusammenführen
merge_Umsatzdaten_wetter <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_Umsatzdaten_wetter, file = "merge_Umsatzdaten_wetter.csv")
=======
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
p<-ggplot(umsatz) +
geom_bar(aes(x = jahr, y = Umsatz), stat = "identity")
p
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
#Neue Spalte mit dem Namen Temperaturklassen hinzufügen
merge_um_wet$Temperaturklassen<-NA
# M$Size[M$Number <= 50] <- "Small"
# Edit: No need to subset "Small"
merge_um_wet$Temperaturklassen <- "kalt"
View(merge_um_wet)
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 10 & merge_um_wet$Temperatur < 20] <- "normal"
View(merge_um_wet)
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 20] <- "warm"
View(merge_um_wet)
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet_temp_klass.csv")
warnigs()
warnings()
ggplot(data = merge_um_wet, aes( x = factor( Temperatur ), y = Warengruppe, fill = Umsatz ) ) +    # print bar chart
geom_bar( stat = 'identity', position = 'dodge' )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
View(merge_um_wet)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", width = 0,9)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 0,9) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 2) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 6) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 0.5) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "count")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", position = "doge")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", position = "stack")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", position = "stack")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_col(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_col(stat = "count")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
trend_um_wet <- ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
View(trend_um_wet)
trend_um_wet <- ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
plot(Umsatz , Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Temperatur) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
View(merge_um_wet)
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
View(wetter)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Bewoelunkung,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Bewoelunkung,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ,  col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Bewoelkung,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Bewölkung" )
plot(merge_um_wet$Bewoelkung , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Bewölkung" , ylab="Umsatz" )
hist(merge_um_wet$Bewoelunkung,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ) xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ,  xlab="Bewölkung" , ylab="Anzahl der Tage")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Bewoelkung,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Bewölkung" )
plot(merge_um_wet$Bewoelkung , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Bewölkung" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Bewoelkung) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Bewoelkung, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Bewoelkung, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Bewoelkung,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Bewölkung" )
plot(merge_um_wet$Bewoelkung , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Bewölkung" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Temperatur) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
=======
plot(Umsatz)
View(Umsatz)
v_umsatz <- Umsatz$Umsatz
v_gruppe <- Umsatz$Warengruppe
plot(v_umsatz)
plot(v_umsatz)
lines(v_umsatz)
hist(v_umsatz)
v_umsatz <- Umsatz$Umsatz
v_gruppe <- Umsatz$Warengruppe
v_datum <- Umsatz$Datum
ggplot(Umsatz)+geom_point(aes(x=v_datum, y=v_umsatz))
ggplot(Umsatz)+geom_bar(aes(x=as.factor(v_datum), y=v_umsatz), stat='identity')
ggplot(Umsatz, aes(x=v_datum, y=v_umsatz)) +
geom_line(color='red')+ggtitle('Umsatz nach Jahrestag')
u_2013 <- Umsatz[v_datum<2014-01-02]
u_2013 <- Umsatz[v_datum<'2014-01-02']
kiwo <- read.csv('kiwo.csv')
View(kiwo)
clear()
rm()
ggplot(Umsatz, aes(x=v_datum, y=v_umsatz))+geom_point()
Umsatz_Wetter <- merge(Umsatz, kiwo, by='Datum')
View(Umsatz_Wetter)
Umsatz_Wetter <- merge(Umsatz, kiwo, by='Datum')
rm(Umsatz_Wetter)
full_set <- read.csv('Variablen.csv')
rm(full_set)
Warengruppen_sortiert <- read.csv('Variablen.csv')
full set <- merge(Warengruppen_sortiert, kiwo, all=TRUE)
full <- merge(Warengruppen_sortiert, kiwo, by='Datum', all= TRUE)
View(Warengruppen_sortiert)
View(Warengruppen_sortiert)
View(Warengruppen_sortiert)
View(kiwo)
rm(full_set)
Warengruppen_sortiert <- read.csv('Variablen.csv')
KIWO <- read.csv('kiwo2.csv')
rm(full_set)
rm(kiwo)
Warengruppen_sortiert <- read.csv('Variablen.csv')
KIWO <- read.csv('kiwo2.csv')
full_set <- merge(Warengruppen_sortiert, KIWO, by='Datum', all=TRUE)
View(KIWO)
View(Warengruppen_sortiert)
View(KIWO)
rm(KIWO)
kiwo <- read.csv('kiwo2.csv')
View(kiwo)
full_set <- read.csv('Variablen.csv')
rm(full_set)
rm(kiwo)
Warengruppen_sortiert <- read.csv('Variablen.csv')
KIWO <- read.csv('kiwo2.csv')
full <- merge(Warengruppen_sortiert, KIWO, by='Datum', all = TRUE)
full <- merge(Warengruppen_sortiert, KIWO, by='Datum')
merge(Warengruppen_sortiert, KIWO, by='Datum', all=TRUE)
View(KIWO)
View(Warengruppen_sortiert)
merge(Warengruppen_sortiert, KIWO, by='Datum', all=TRUE)
merge(Warengruppen_sortiert, KIWO, by= Datum, all=TRUE)
head(KIWO)
head(KIWO)
View(Warengruppen_sortiert)
Warengruppen_sortiert <- read.csv('Variablen.csv', sep';')
Warengruppen_sortiert <- read.csv('Variablen.csv', head = TRUE, sep';')
Warengruppen_sortiert <- read.csv('Variablen.csv', head = TRUE, sep = ';')
Warengruppen_sortiert <- read.csv('Variablen.csv', head=TRUE, sep=';')
KIWO <- read.csv('kiwo2.csv', head=TRUE, sep=';')
head(KIWO)
head(KIWO)
merge(Warengruppen_sortiert, KIWO, by= Datum, all=TRUE)
merge(Warengruppen_sortiert, KIWO, by= "Datum", all=TRUE)
fullset <- merge(Warengruppen_sortiert, KIWO, by= "Datum", all=TRUE)
head(fullset)
View(Warengruppen_sortiert)
View(fullset)
View(Warengruppen_sortiert)
?read.csv
rm(fullset)
full_set <- merge(Warengruppen_sortiert, KIWO, by= "Datum", all=TRUE)
View(full_set)
rm(full_set)
full_set <- merge(KIWO, Warengruppen_sortiert by= "Datum", all=TRUE)
full_set <- merge(KIWO, Warengruppen_sortiert, by='Datum', all=TRUE)
install.packages("xlsx")
library(xlsx)
write.csv(full_set, 'full_set')
wetter <- read.csv('wetter.csv')
View(wetter)
wetter <- read.csv('weasth.csv')
rm(wetter)
wetter <- read.csv('weasth.csv')
head(wetter)
wetter <- read.csv('weasth.csv', head=TRUE, sep=';')
head(wetter)
full_set2 <- merge(wetter, full_set, by= "Datum", all=TRUE)
View(full_set2)
write.csv(full_set2, 'C:/Users/suapm403/Desktop/Data-Science-Gruppe-2-Teamordner/full_set2.csv')
full_set3 <- read.csv('full_set2.csv', head=TRUE, sep=','
View(full_set2)
write.xlsx(full_set2, 'C:/Users/suapm403/Desktop/Data-Science-Gruppe-2-Teamordner/full_set2.xlsx')
>>>>>>> 6f386506e11433e6a0d6049703b04cc0867ab6d9
>>>>>>> 7b40a82c8ae87b040c1fa51a33ba9b0d30f60395
