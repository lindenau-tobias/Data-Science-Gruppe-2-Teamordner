umsatz[order(umsatz$wochentag), ]
ggplot(umsatz) +
geom_bar(aes(x = wochentag, y = Umsatz), stat = "identity")
#Balkendiagramm der Umsätze aller Warengruppen je Wochentag (ohne Konfidenzintervall)
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
#n ist einfach nur praktisch und z?hlt die Wochentage
my_sum_week<- umsatz %>%
group_by(wochentag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum_week) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=wochentag, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
xlab("Wochentag")+
ylab("Durschnitt (€)")+
ggtitle("Durchschnittlicher Umsatz in der Woche über alle Warengruppen")
#Tabelle für den Umsatz nach Warengruppen  und  Wochentagen
ware_week<- umsatz %>%
group_by(wochentag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Tage ordnen
ware_week$wochentag <- factor(ware_week$wochentag , levels= c("Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"))
ware_week[order(ware_week$wochentag), ]
# nach Warengruppe an den Wochentagen den Umsatz plotten
ggplot(ware_week) +
geom_bar( aes(x=Warengruppe, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~wochentag)+
ggtitle("Umsatz nach Warengruppe und Wochentag")
ggplot(ware_week) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag")
Feiertage <- read_delim("Variablen.csv",         #bisher nur für das Jahr 2013 (Stand 09.12)
";", escape_double = FALSE, trim_ws = TRUE)
#Tabelle für den Umsatz nach Warengruppen  und  Wochentagen (ohne Warengruppe 6 und Werte von Warengruppe 5 über 1000€)
ware_ohne6_5gr1000<- umsatz %>%
filter(Warengruppe != 6)  %>%
filter(!(Warengruppe == 5 & Umsatz >= 1000)) %>%   #alles rausgefiltert wo 5 mehr Umsatz als 1000 Euro hat
group_by(wochentag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Tage ordnen
ware_ohne6_5gr1000$wochentag <- factor(ware_ohne6_5gr1000$wochentag , levels= c("Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"))
ware_ohne6_5gr1000[order(ware_ohne6_5gr1000$wochentag), ]
# nach Warengruppe an den Wochentagen den Umsatz plotten (ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro)
ggplot(ware_ohne6_5gr1000) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag")+
labs(caption = "ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro, sind auch aus den Standardabweichungen, Durchschnitten etc. entfernt")
# nach Warengruppe an den Wochentagen den Umsatz plotten (ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro)
ggplot(ware_ohne6_5gr1000) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=wochentag, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag")+
labs(caption = "ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro, sind auch aus den Standardabweichungen, Durchschnitten etc. entfernt")
library(readr)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
View(umsatz)
#Bibliotheken
library(readr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
#Einlsen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
W1<-filter(umsatz, Warengruppe==1) #filtern Warengruppe 1
View(W1)
w1<-filter(umsatz, Warengruppe==1) #filtern Warengruppe 1
View(w1)
scatter.smooth(x=w1$Datum, y=w1$Umsatz, main="Warengruppe 1: Umsatz ~ Datum")  # scatterplot
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=sum_tag %>% filter(summe>=2000), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(w1, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=sum_tag %>% filter(summe>=2000), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(w1, aes(x=Datum, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
#geom_label(
# data=w1 %>% filter(summe>=2000), # alles mit einer Summe ab 2000€ gelabelt
#aes(label=Datum)
#)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(w1, aes(x=Datum, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=w1 %>% filter(summe>=250), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(w1, aes(x=Datum, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=w1 %>% filter(Umsatz>=250), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggplot(w1, aes(x=Datum, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=w1 %>% filter(Umsatz>=200), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
#Tabelle nach Umsatz sortieren
w1<- arrange(w1, des(Umsatz))
#Tabelle nach Umsatz sortieren
w1<- arrange(w1, desc(Umsatz))
View(w1)
plot(w1)
Feiertage<-read_delim("Variablen.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
head(Feiertage)
besonderes<-read_delim("Variablen.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
View(besonderes)
Feiertage<-filter(besonderes, Feiertage==1)
View(Feiertage)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
library(readr)
library(tidyverse)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
View(umsatz)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
umsatz$wochentag <- weekdays(umsatz$Datum)
View(umsatz)
i
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
#Einlsen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
Feiertage<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
View(bbesonderes)
View(besonderes)
Feiertage<-filter(besonderes, Feiertage==1)
head(Feiertage)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
head(vor_Feiertag)
View(vor_Feiertag)
?merge
vor_Feiertag<-merge (vor_Feiertag, umsatz)
View(vor_Feiertag)
View(umsatz)
View(umsatz)
View(umsatz)
Feiertage<-filter(besonderes, Feiertage==1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
xFeiertag<-merge (vor_Feiertag, umsatz, by.x = "V1", by.y="Datum")
xFeiertag<-merge (vor_Feiertag, umsatz, by.x = "V1", by.y="Datum")
xFeiertag<-merge (vor_Feiertag, umsatz,  by.y="Datum")
str(vor_Feiertag)
?as.data.frame
umsatz_vor_Feiertag<-umsatz %>% filter(Feiertage %in% vor_Feiertag)
umsatz_vor_Feiertag<-subset(umsatz, Datum %in% vor_Feiertag)
View(umsatz_vor_Feiertag)
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
View(umsatz_vor_Feiertag)
umsatz_vor_Feiertag<-filter(umsatz, Datum %in% vor_Feiertag)
View(umsatz_vor_Feiertag)
umsatz_vor_Feiertag<-umsatz[umsatz$Datum %in% vor_Feiertag ,]
View(umsatz_vor_Feiertag)
View(umsatz_vor_Feiertag)
?as.data.frame
as.data.frame(vor_Feiertag, row.names = Datum)
as.data.frame(vor_Feiertag, col.names = Datum)
umsatz_vor_Feiertag<-umsatz[umsatz$Datum %in% vor_Feiertag ,]
View(umsatz_vor_Feiertag)
as.data.frame(vor_Feiertag)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
str(vor_Feiertag)
filter(umsatz%>%vor_Feiertag)
filter(umsatz%>% vor_Feiertag)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
filter(umsatz%>% vor_Feiertag)
v_Fei<-as.data.frame(vor_Feiertag)
View(v_Fei)
vor_Feiertag<-as.data.frame(vor_Feiertag)
filter(umsatz%>% vor_Feiertag)
umsatz_vor_Feiertag<-subset(umsatz, Datum %in% vor_Feiertag)
View(umsatz_vor_Feiertag)
View(vor_Feiertag)
umsatz %>% filter(Datum %in% vor_Feiertag$vor_Feiertag)
View(umsatz)
#Einlsen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
vor_Feiertag<-as.data.frame(vor_Feiertag)
u<-subset(umsatz, umsatz$Datum %in% vor_Feiertag$vor_Feiertag)
View(u)
View(vor_Feiertag)
View(umsatz)
View(vor_Feiertag)
u<-subset(umsatz, umsatz$Datum ==
vor_Feiertag$vor_Feiertag)
umsatz %>% filter(Datum > vor_Feiertag)
umsatz %>% filter(Datum == vor_Feiertag)
umsatz %>% filter(Datum %>% vor_Feiertag)
vor_Feiertag<-as.data.frame(vor_Feiertag)
umsatz %>% filter(Datum %>% vor_Feiertag)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
umsatz %>% filter(Datum %>% vor_Feiertag)
umsatz %>% filter(Datum =vor_Feiertag)
umsatz %>% filter(Datum ==vor_Feiertag)
umsatz_vor_Feiertag<-umsatz %>% filter(Datum ==vor_Feiertag)
View(umsatz_vor_Feiertag)
#Einlsen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
umsatz_vor_Feiertag<-umsatz %>% filter(Datum ==vor_Feiertag)
View(umsatz_vor_Feiertag)
vor_Feiertag<-as.data.frame(vor_Feiertag)
View(vor_Feiertag)
umsatz %>%
filter(Datum %in% vor_Feiertag$vor_Feiertag)
umsatz_vor_Feiertag<-umsatz %>%  filter(Datum %in% vor_Feiertag$vor_Feiertag)
View(umsatz_vor_Feiertag)
umsatz %>%  filter(Datum %in% vor_Feiertag$vor_Feiertag)
umsatz[match(vor_Feiertag$vor_Feiertag, umsatz$Datum), ]
#Einlsen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
um_v_F<-umsatz[match(vor_Feiertag$vor_Feiertag, umsatz$Datum), ]
View(um_v_F)
View(Feiertage)
View(Feiertage)
um_v_F<-umsatz[match(Feiertage$Datum, umsatz$Datum), ]
View(um_v_F)
#Einlsen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
vor_Feiertag<-as.data.frame(vor_Feiertag)
View(vor_Feiertag)
str(vor_Feiertag)
str(umsatz)
umsatzdaten_gekuerzt <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_date(format = "%Y-%m-%d")))
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
vor_Feiertag<-as.data.frame(vor_Feiertag)
View(umsatzdaten_gekuerzt)
umsatzdaten_gekuerzt %>%
filter(Datum %in% vor_Feiertag$vor_Feiertag)
umsatz_vor_Feiertag<-umsatz%>%
filter(Datum %in% vor_Feiertag$vor_Feiertag)
View(umsatz_vor_Feiertag)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_date(format = "%Y-%m-%d")))
umsatz%>%
filter(Datum %in% vor_Feiertag$vor_Feiertag)
vor_Feiertag<-umsatz%>% filter(Datum %in% vor_Feiertag$vor_Feiertag)
View(vor_Feiertag)
View(umsatzdaten_gekuerzt)
nach_Feiertag<-Feiertage$Datum+days(1)
nach_Feiertag<-as.data.frame(nach_Feiertag)
#alle Daten nach einem Feiertag
nach_Feiertag<-umsatz%>% filter(Datum %in% nach_Feiertag$nach_Feiertag)
View(nach_Feiertag)
View(vor_Feiertag)
View(umsatz)
#Variable für Weihnachten und Neujahr
## Neujahr
Neujahr<-seq(as.Date("2013/1/1"), as.Date("2019/1/1"), "years")
Weihnachten<--seq(as.Date("2013/12/25:27"), as.Date("2019/1/25:27"), "years")
Weihnachten<--seq(as.Date("2013/12/25" : "2013/12/27"), as.Date("2019/1/25": "2019/12/27"), "years")
Weihnachten<-seq(as.Date("2013/12/25" : "2013/12/27"), as.Date("2019/1/25": "2019/12/27"), "years")
Weihnachten<-seq(as.Date("2013/12/25","2013/12/26", "2013/12/27"), as.Date("2019/1/25", "2019/12/26", "2019/12/27"), "years")
Weihnachten<-seq(as.Date("2013/12/25"), as.Date("2019/1/25"), "years"+
as.Date("2013/12/26"), as.Date("2019/12/26"), "years"+
as.Date("2013/12/27"), as.Date("2019/12/27"), "years")
Weihnachten<-seq(as.Date("2013/12/25"), as.Date("2019/1/25"),
as.Date("2013/12/26"), as.Date("2019/12/26") ,
as.Date("2013/12/27"), as.Date("2019/12/27"),"years")
?seq
?seq.Date
Weihnachten<-as.Date("2013-12-25","2013-12-26","2013-12-27") %Y+% years(c(0,1,2,3,4))
Weihnachten<-as.Date("2013-12-25","2013-12-26","2013-12-27") %y+% years(c(0,1,2,3,4))
library(lubridate)
Weihnachten<-as.Date("2013-12-25","2013-12-26","2013-12-27") %Y+% years(c(0,1,2,3,4))
Weihnachten<-as.Date("2013-12-25","2013-12-26","2013-12-27") %Y% years(c(0,1,2,3,4))
Weihnachten<-as.Date("2013-12-25","2013-12-26","2013-12-27") %m+% years(c(0,1,2,3,4))
Weihnachten
Weihnachten<-as.Date("2013-12-25") %m+% years(c(0,1,2,3,4))
Weihnachten<-as.Date("2013-12-25") %m+% years(c(0,1,2,3,4),
Weihnachten<-as.Date("2013-12-25") %m+% years(c(0,1,2,3,4), as.Date("2013-12-26") %m+% years(c(0,1,2,3,4))                                           as.Date("2013-12-26") %m+% years(c(0,1,2,3,4))                               )
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% years(c(0,1,2,3,4))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% days (c(0,1,2) %m+% years(c(0,1,2,3,4))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% days (c(0,1,2) %m+% years(c(0,1,2,3,4)))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% days (c(0,1,2) %m+% years(c(0,1,2,3,4)))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% days (c(0,1,2) %m+% years(c(0:7)))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% days (c(0,1,2) %m+% years(c(0:7)))
Weihnachten<-as.Date("2013-12-25":"2013-12-27")  %m+% years(c(0:7)))
Weihnachten<-as.Date("2013-12-25":"2013-12-27")  %m+% years(c(0:7))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% years(c(0:7))
Weihnachten<-as.Date("2013-12-25":"2013-12-27") %m+% years(c(0,1:7))
Weihnachten<-as.Date("2013-12-25") %m+% years(c(0:7))
Weihnachten_25<-as.Date("2013-12-25") %m+% years(c(0:7))
Weihnachten_26<-as.Date("2013-12-26") %m+% years(c(0:7))
for (i in Weihnachten_25 ){
%m+% days(c(0:2), i))
}
Weihnachten_25<- Weihnachten_25 %m+% days(c(0:2)
for (year in c(2010,2011,2012,2013,2014,2015)){
print(paste("The year is", year))
}
for (i in Weihnachten_25 ){
%m+% days(c(0:2), i))
}
Weihnachten_25<- Weihnachten_25 %m+% days(c(0:2))
Weihnachten_25
Weihnachten_25<-as.Date("2013-12-25") %m+% years(c(0:7))
Weihnachten_26<-as.Date("2013-12-26") %m+% years(c(0:7))
Weihnachten_27<-as.Date("2013-12-27") %m+% years(c(0:7))
for (i in Weihnachten_25 ){
%m+% days(c(0:2), i)
}
for (year in c(2010,2011,2012,2013,2014,2015)){
print(paste("The year is", year))
}
for (i in Weihnachten_25 ){
%m+% days(c(0:2), i)
}
for (i in Weihnachten_25 ){
%m+% days(c(0:2), i)}
for (i in Weihnachten_25 ){
%m+% days(c(0:2), i)
}
for (i in Weihnachten_25){
%m+% day(c(0:2))
}
Weihnachten_25<- Weihnachten_25 %m+% days(c(0,1,2))
Weihnachten_<- as.Date("2013-12-25")  %m+% days(c(0,1,2))
Weihnachten_25<-as.Date("2013-12-25") %m+% years(c(0:7))
Weihnachten<- Weihnachten_25 %m+% days(c(0,1,2))
Weihnachten_<-as.Date("2013-12-25") %m+% days(c(0:2))
Weihnachten<-as.Date("2013-12-25") %m+% days(c(0:2))
View(Weihnachten)
Weihnachten1<-as.Date("2013-12-25") %m+% years(c(0:6))
Weihnachten<-as.Date("2013-12-25") %m+% days(c(0:2))
Weihnachten_25<-as.Date("2013-12-25") %m+% years(c(0:7))
Weihnachten_26<-as.Date("2013-12-26") %m+% years(c(0:7))
Weihnachten_27<-as.Date("2013-12-27") %m+% years(c(0:7))
Weihnachten_25<-as.Date("2013-12-25") %m+% years(c(0:7))
str(Weihnachten_25)
Weihnachten_25<-as.data.frame(as.Date("2013-12-25") %m+% years(c(0:7)))
Weihnachten<-rbind (Weihnachten_25,Weihnachten_26, Weihnachten_27)
Weihnachten_25<-as.data.frame(as.Date("2013-12-25") %m+% years(c(0:7)))
Weihnachten_26<-as.data.frame(as.Date("2013-12-26") %m+% years(c(0:7)))
Weihnachten_27<-as.data.frame (as.Date(("2013-12-27") %m+% years(c(0:7)))
Weihnachten_27<-as.data.frame(as.Date("2013-12-27") %m+% years(c(0:7)))
Weihnachten_27<-as.data.frame(as.Date("2013-12-27") %m+% years(c(0:7)))
Weihnachten<-rbind (Weihnachten_25,Weihnachten_26, Weihnachten_27)
View(Weihnachten_25)
View(Weihnachten_26)
View(Weihnachten_27)
?rbind
Weihnachten<-merge (Weihnachten_25,Weihnachten_26, Weihnachten_27)
Weihnachten<-rbind.data.frame(Weihnachten_25,Weihnachten_26, Weihnachten_27)
Weihnachten<-(Weihnachten_25,Weihnachten_26, Weihnachten_27)
Weihnachten<-bind_rows(Weihnachten_25,Weihnachten_26, Weihnachten_27)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1) & Weihnachten-days(1)
#Bibliotheken
library(readr)
#Bibliotheken
library(readr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_date(format = "%Y-%m-%d")))
besonderes<-read_delim("besondere_Tage.csv",
";", escape_double = FALSE, col_types = cols(Datum = col_date(format = "%d.%m.%Y")),
trim_ws = TRUE)
Feiertage<-filter(besonderes, Feiertage==1)
#Variable für Weihnachten und Neujahr
## Neujahr
Neujahr<-seq(as.Date("2013/1/1"), as.Date("2019/1/1"), "years")
Weihnachten_25<-as.data.frame(as.Date("2013-12-25") %m+% years(c(0:7)))
Weihnachten_26<-as.data.frame(as.Date("2013-12-26") %m+% years(c(0:7)))
Weihnachten_27<-as.data.frame(as.Date("2013-12-27") %m+% years(c(0:7)))
Weihnachten<-bind_rows(Weihnachten_25,Weihnachten_26, Weihnachten_27)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1) & Weihnachten-days(1)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
Feiertage<-bind_rows(Feiertage, Weihnachten)
vor_Feiertag<-Feiertage$Datum-days(1)
vor_Feiertag<-as.data.frame(vor_Feiertag)
#alle Daten vor einem Feiertag
vor_Feiertag<-umsatz%>% filter(Datum %in% vor_Feiertag$vor_Feiertag)
#Weihnachten der Feiertagetabelle hinzufügen
Feiertage<-bind_rows(Feiertage, Weihnachten, Neujahr)
#Variable für Weihnachten und Neujahr
## Neujahr
Neujahr<-as.data.frame(seq(as.Date("2013/1/1"), as.Date("2019/1/1"), "years"))
Weihnachten_25<-as.data.frame(as.Date("2013-12-25") %m+% years(c(0:7)))
Weihnachten_26<-as.data.frame(as.Date("2013-12-26") %m+% years(c(0:7)))
Weihnachten_27<-as.data.frame(as.Date("2013-12-27") %m+% years(c(0:7)))
Weihnachten<-bind_rows(Weihnachten_25,Weihnachten_26, Weihnachten_27)
#Weihnachten der Feiertagetabelle hinzufügen
Feiertage<-bind_rows(Feiertage, Weihnachten, Neujahr)
#erstellen einer Variablen mit allen Tagen, die einen Tag vor dem Feiertag sind
vor_Feiertag<-Feiertage$Datum-days(1)
vor_Feiertag<-as.data.frame(vor_Feiertag)
#alle Daten vor einem Feiertag
vor_Feiertag<-umsatz%>% filter(Datum %in% vor_Feiertag$vor_Feiertag)
#erstellen einer Variable mit den Tagen nach einem Feiertag
nach_Feiertag<-Feiertage$Datum+days(1)
nach_Feiertag<-as.data.frame(nach_Feiertag)
#alle Daten nach einem Feiertag
nach_Feiertag<-umsatz%>% filter(Datum %in% nach_Feiertag$nach_Feiertag)
