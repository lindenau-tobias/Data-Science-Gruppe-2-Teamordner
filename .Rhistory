#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1)
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5),+
# Balkendiagramm erstellen
ggplot(merge_um_wet),+
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*10, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*1, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*2, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_bar(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*2, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Teamperatur)*2, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*2, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperaturklassen)*100, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_bar(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*200, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*50, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*25, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*30, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*35, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1),+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
plot(p3)
#Plot im Gruppenordner abspeichern
png('Umsatz_Temperaturklassen_gesam´ter_Zeitraum(nuesaklliert).png')
plot(p3)
dev.off()
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
library(tidyr)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet_zeit <- merge(umsatz,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet_zeit, file = "merge_um_wet_zeit.csv")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
library(tidyr)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet_zeit <- merge(umsatz,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet_zeit, file = "merge_um_wet_zeit.csv")
View(merge_um_wet_zeit)
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p1)
#Plot im Gruppenordner abspeichern
png('Umsatz_Wetter_gesamter_Zeitraum.png')
plot(p1)
dev.off()
#Erstellung der Variable mit Jahr
merge_um_wet_zeit$jahr <- year(merge_um_wet_zeit$Datum)
#Tabelle für den Umsatz nach Warengruppen  und Jahren
ware_jahr<- merge_um_wet_zeit %>%
group_by(jahr, Warengruppe, Temperatur) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean_um=mean(Umsatz),
sd_um=sd(Umsatz),
summe_um=sum(Umsatz)) %>%
mutate( se=sd_um/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#VERSUCH
# nach Warengruppe nach Jahren den Umsatz plotten
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=mean_um), stat="identity", fill="forestgreen", alpha=0.5) +
geom_line( aes(x=Warengruppe, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5) +
#  geom_errorbar( aes(x=Warengruppe, ymin=mean_um-ic, ymax=mean_um+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~jahr)+
ggtitle("Umsatz nach Warengruppe und Jahr")
View(ware_jahr)
View(merge_um_wet_zeit)
#Erstellung der Variable mit Jahr
merge_um_wet_zeit$jahr <- year(merge_um_wet_zeit$Datum)
#Tabelle für den Umsatz nach Warengruppen  und Jahren
ware_jahr<- merge_um_wet_zeit %>%
group_by(jahr, Warengruppe, Temperatur) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean_um=mean(Umsatz),
sd_um=sd(Umsatz),
summe_um=sum(Umsatz)) %>%
mutate( se=sd_um/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#VERSUCH
# nach Warengruppe nach Jahren den Umsatz plotten
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=mean_um), stat="identity", fill="forestgreen", alpha=0.5) +
geom_line( aes(x=Warengruppe, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5) +
#  geom_errorbar( aes(x=Warengruppe, ymin=mean_um-ic, ymax=mean_um+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~jahr)+
ggtitle("Umsatz nach Warengruppe und Jahr")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet_zeit, file = "merge_um_wet_zeit_jahr.csv")
#Summe der Jahre bilden
sum_tag<- umsatz %>%
group_by(Datum) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#nach Warengruppe an den Monatstagen den Umsatz plotten
ggplot(sum_tag, aes(x=Datum, y=summe)) +
geom_point() +
geom_smooth(method=lm , color="red", se=FALSE) +
geom_label(
data=sum_tag %>% filter(summe>=2000), # alles mit einer Summe ab 2000€ gelabelt
aes(label=Datum)
)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")
ggtitle("Umsatz über den gesamten Zeitraum")
#nach Warengruppe an den Monatstagen den Umsatz plotten
ggplot(umsatz, aes(x=Datum, y=Umsatz)) +
geom_point() +
facet_wrap(~Warengruppe)+
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
ggtitle ("Umsatz über den gesamten Zeitraum nach Warengruppen")
#testzeile
#nach Warengruppe an den Monatstagen den Umsatz und die Temperatur plotten
ggplot(merge_um_wet_zeit, aes(x=Datum, y=Umsatz)) +
geom_point() +
facet_wrap(~Warengruppe)+
geom_point(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))+
ggtitle ("Umsatz und Temperatur über den gesamten Zeitraum nach Warengruppen")
#nach Warengruppe an den Monatstagen den Umsatz und die Temperatur plotten
ggplot(merge_um_wet_zeit, aes(x=Datum, y=Umsatz)) +
geom_point() +
facet_wrap(~Warengruppe)+
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
xlab("Jahr")+
ylab("Summe Umsatz (€)")+
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))+
ggtitle ("Umsatz und Temperatur über den gesamten Zeitraum nach Warengruppen")
ggplot(ware_jahr, aes(x=jahr, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Jahr")+
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
merge_um_wet_zeit$monatstag<- mday(umsatz$Datum)
View(merge_um_wet_zeit)
merge_um_wet_zeit$monatstag<- mday(merge_um_wet_zeit$Datum)
View(merge_um_wet_zeit)
sum_monatstage<- merge_um_wet_zeit %>%
group_by(monatstag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
View(merge_um_wet_zeit)
# nach Warengruppe an den Monatstagen den Umsatz plotten
ggplot(sum_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
xlab ("Tage im Monat")+
ylab("Durchschnitt (€)")+
ggtitle("Umsatz im Monatsverlauf")
ware_monatstage<- merge_um_wet_zeit %>%
group_by(monatstag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# nach Warengruppe an den Monatstagen den Umsatz plotten (Scatterplot)
ggplot(ware_monatstage, aes(x=monatstag, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Monatstag")
#Monat an den Datensatz heranhängen
merge_um_wet_zeit$monat<- month(merge_um_wet_zeit$Datum)
#den Umsatz nach den Monaten filtern
ware_monat<- merge_um_wet_zeit %>%
group_by(monat, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# nach Warengruppe in den unterschiedlichen Monaten den Umsatz plotten (Scatterplot)
ggplot(ware_monat, aes(x=monat, y=mean)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE)+
facet_wrap(~Warengruppe)+
xlab("Monat")+
ylab("Durchschnittlicher Umsatz (€)")
ggtitle("Umsatz nach Warengruppe und Monat")
View(merge_um_wet_zeit)
View(merge_um_wet_zeit)
#Erstellung der Variable mit Wochentag
merge_um_wet_zeit$wochentag <- weekdays(merge_um_wet_zeit$Datum)
View(merge_um_wet_zeit)
View(merge_um_wet_zeit)
mod <- lm(umsatz ~ wochentag + Temperatur, merge_um_wet_zeit)
mod <- lm(Umsatz ~ wochentag + Temperatur, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Temperatur + , merge_um_wet_zeit)
mod <- lm(Umsatz ~ as.factor(wochentag) + Temperatur, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Temperatur, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Warengruppe + Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Warengruppe + Wettercode + Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + Warengruppe + as.factor(Wettercode) + Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
mod <- lm(Umsatz ~ as.factor(wochentag) + as.factor(Warengruppe) + as.factor(Wettercode) + Temperatur + monat + monatstag, merge_um_wet_zeit)
summary(mod)
