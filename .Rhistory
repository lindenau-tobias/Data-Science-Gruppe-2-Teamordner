mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
View(my_sum)
#Balkendiagramm der UmsÃ¤tze aller Warengruppen je Wochentag (ohne Konfidenzintervall)
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
#n ist einfach nur praktisch und zählt die Wochentage
my_sum_year<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl zählt
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres über alle Warengruppen")
my_sum_year<- umsatz %>%
group_by(jahr) %>%
b
my_sum_year<- umsatz %>%
group_by(jahr)
library(readr)
library(lubridate)
umsatz$jahr <- year(umsatz$Datum)
ggplot(umsatz) +
geom_bar(aes(x = jahr, y = Umsatz), stat = "identity")
library(readr)
library(lubridate)
library(lubridate)
library(ggplot2)
umsatz<-umsatzdaten_gekuerzt <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
#Visualsierung des Umsatzes f?r die Jahre 2013-2018 HAT NICHT FUNKTIONIERT
umsatz%>%
ggplot(aes(Umsatz))+
geom_freqpoly() #weil ein Monat etwa so viele Tage hat
library(dpylr)
library(dplyr)
umsatz<-umsatzdaten_gekuerzt <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
#Visualsierung des Umsatzes f?r die Jahre 2013-2018 HAT NICHT FUNKTIONIERT
umsatz%>%
ggplot(aes(Umsatz))+
geom_freqpoly() #weil ein Monat etwa so viele Tage hat
umsatz$wochentag <- weekdays(umsatz$Datum)
ggplot(umsatz) +
geom_bar(aes(x = wochentag, y = Umsatz), stat = "identity")
ggplot(umsatz) +
geom_bar(aes(x = wochentag, y = Umsatz), stat = "identity")
#Balkendiagramm der Umsätze aller Warengruppen je Wochentag (ohne Konfidenzintervall)
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
#n ist einfach nur praktisch und z?hlt die Wochentage
my_sum_week<- umsatz %>%
group_by(wochentag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
View(merge_Umsatzdaten_wetter)
# Balkendiagramm erstellen
ggplot(merge_Umsatzdaten_wetter, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_Umsatzdaten_wetter %>%
group_by(Temperatur) %>%
summarise(
n=n(),
=======
#Balkendiagramm der Umsätze aller Warengruppen je Wochentag (ohne Konfidenzintervall)
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
#n ist einfach nur praktisch und z?hlt die Wochentage
my_sum_week<- umsatz %>%
group_by(wochentag) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
<<<<<<< HEAD
ggplot(my_sum) +
geom_bar( aes(x=Teamperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Teamperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
# Balkendiagramm erstellen
ggplot(merge_Umsatzdaten_wetter, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_Umsatzdaten_wetter %>%
group_by(Temperatur) %>%
summarise(
n=n(),
=======
ggplot(my_sum_week) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=wochentag, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz in der Woche ?ber alle Warengruppen")
umsatz$jahr <- year(umsatz$Datum)
ggplot(umsatz) +
geom_bar(aes(x = jahr, y = Umsatz), stat = "identity")
# Confidence Interval
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
my_sum_year<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
<<<<<<< HEAD
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Teamperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
# Balkendiagramm erstellen
ggplot(merge_Umsatzdaten_wetter, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_Umsatzdaten_wetter %>%
group_by(Temperatur) %>%
summarise(
n=n(),
=======
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
my_sum_year<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
sum=sum(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
geom_bar( aes(x=jahr, y=sum, stat="identity", fill="forestgreen", alpha=0.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
# Confidence Interval
ggplot(my_sum_year) +
my_sum_year_ohnemean<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
sum=sum(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum_year_ohnemean) +
geom_bar( aes(x=jahr, y=sum, stat="identity", fill="forestgreen", alpha=0.5)) +
geom_errorbar( aes(x=jahr, ymin=sum-ic, ymax=sum+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
# Confidence Interval
ggplot(my_sum_year_ohnemean) +
geom_bar( aes(x=jahr, y=sum, stat="identity", alpha=0.5)) +
geom_errorbar( aes(x=jahr, ymin=sum-ic, ymax=sum+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
# Confidence Interval
ggplot(my_sum_year_ohnemean) +
geom_bar( aes(x=jahr, stat="identity", alpha=0.5)) +
geom_errorbar( aes(x=jahr, ymin=sum-ic, ymax=sum+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
View(my_sum_year_ohnemean)
View(my_sum_year)
View(my_sum_week)
View(my_sum_year)
my_sum_year<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
umsatz<-umsatzdaten_gekuerzt <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
View(umsatzdaten_gekuerzt)
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
umsatz$jahr <- year(umsatz$Datum)
ggplot(umsatz) +
geom_bar(aes(x = jahr, y = Umsatz), stat = "identity")
my_sum_year<- umsatz %>%
group_by(jahr) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
<<<<<<< HEAD
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
#Tabelle Umsatz und Wetter zusammenführen
merge_Umsatzdaten_wetter <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_Umsatzdaten_wetter, file = "merge_Umsatzdaten_wetter.csv")
=======
ggplot(my_sum_year) +
geom_bar( aes(x=jahr, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=jahr, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ggtitle("Durchschnittlicher Umsatz des Jahres ?ber alle Warengruppen")
p<-ggplot(umsatz) +
geom_bar(aes(x = jahr, y = Umsatz), stat = "identity")
p
>>>>>>> 3843714eee836e868e0a05dc8dbd743540fd26ef
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
#Neue Spalte mit dem Namen Temperaturklassen hinzufügen
merge_um_wet$Temperaturklassen<-NA
# M$Size[M$Number <= 50] <- "Small"
# Edit: No need to subset "Small"
merge_um_wet$Temperaturklassen <- "kalt"
View(merge_um_wet)
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 10 & merge_um_wet$Temperatur < 20] <- "normal"
View(merge_um_wet)
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 20] <- "warm"
View(merge_um_wet)
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet_temp_klass.csv")
warnigs()
warnings()
ggplot(data = merge_um_wet, aes( x = factor( Temperatur ), y = Warengruppe, fill = Umsatz ) ) +    # print bar chart
geom_bar( stat = 'identity', position = 'dodge' )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
View(merge_um_wet)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", width = 0,9)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 0,9) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 2) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 6) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz), width = 0.5) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "count")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", position = "doge")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", position = "stack")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity", position = "stack")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_col(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_col(stat = "count")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
trend_um_wet <- ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
View(trend_um_wet)
trend_um_wet <- ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
plot(Umsatz , Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Temperatur) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
View(merge_um_wet)
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
View(wetter)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Bewoelunkung,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Bewoelunkung,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ,  col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Bewoelkung,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Bewölkung" )
plot(merge_um_wet$Bewoelkung , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Bewölkung" , ylab="Umsatz" )
hist(merge_um_wet$Bewoelunkung,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ) , xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ) xlab="Bewölkung" , ylab="Anzahl der Tage")
hist(merge_um_wet$Bewoelunkung,  main="" ,  xlab="Bewölkung" , ylab="Anzahl der Tage")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Bewoelkung,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Bewölkung" )
plot(merge_um_wet$Bewoelkung , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Bewölkung" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Bewoelkung) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Bewoelkung, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Bewoelkung, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
ggplot(merge_um_wet, aes(x=Bewoelkung, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Bewoelkung,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Bewölkung" )
plot(merge_um_wet$Bewoelkung , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Bewölkung" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Temperatur) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
