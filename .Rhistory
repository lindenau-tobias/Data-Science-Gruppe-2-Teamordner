<<<<<<< HEAD
=======
geom_errorbar( aes(x=wochentag, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
xlab("Wochentag")+
ylab("Durschnitt (€)")+
ggtitle("Durchschnittlicher Umsatz in der Woche über alle Warengruppen")
#Tabelle für den Umsatz nach Warengruppen  und  Wochentagen
ware_week<- umsatz %>%
group_by(wochentag, Warengruppe) %>%
=======
trend_um_wet <- ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="height" , ylab="nbr of plants")
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
plot(Umsatz , Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Temperatur) %>%
>>>>>>> eac6bcacf6fdb3dbaf20e3cfb860875c897e2243
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Tage ordnen
ware_week$wochentag <- factor(ware_week$wochentag , levels= c("Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"))
ware_week[order(ware_week$wochentag), ]
# nach Warengruppe an den Wochentagen den Umsatz plotten
ggplot(ware_week) +
geom_bar( aes(x=Warengruppe, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~wochentag)+
ggtitle("Umsatz nach Warengruppe und Wochentag")
ggplot(ware_week) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag")
#Tabelle für den Umsatz nach Warengruppen  und  Wochentagen (ohne Warengruppe 6 und Werte von Warengruppe 5 über 1000€)
ware_ohne6_5gr1000<- umsatz %>%
filter(Warengruppe != 6)  %>%
filter(!(Warengruppe == 5 & Umsatz >= 1000)) %>%   #alles rausgefiltert wo 5 mehr Umsatz als 1000 Euro hat
group_by(wochentag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Tage ordnen
ware_ohne6_5gr1000$wochentag <- factor(ware_ohne6_5gr1000$wochentag , levels= c("Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"))
ware_ohne6_5gr1000[order(ware_ohne6_5gr1000$wochentag), ]
# nach Warengruppe an den Wochentagen den Umsatz plotten (ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro)
ggplot(ware_ohne6_5gr1000) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag")+
labs(caption = "ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro, sind auch aus den Standardabweichungen, Durchschnitten etc. entfernt")
#Tabelle für den Umsatz nach Warengruppen  und  Wochentagen
ware_week<- umsatz %>%
group_by(wochentag, Warengruppe) %>%
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
summe=sum(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
<<<<<<< HEAD
#Tage ordnen
ware_week$wochentag <- factor(ware_week$wochentag , levels= c("Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"))
ware_week[order(ware_week$wochentag), ]
# nach Warengruppe an den Wochentagen den Umsatz plotten
ggplot(ware_week) +
geom_bar( aes(x=Warengruppe, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~wochentag)+
ggtitle("Umsatz nach Warengruppe und Wochentag", subtitle = "Mit warengruppe 6 und allen Werten von Warengruppe 5")
ggplot(ware_week) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag", subtitle = "Mit warengruppe 6 und allen Werten von Warengruppe 5")
#Tabelle für den Umsatz nach Warengruppen  und  Wochentagen (ohne Warengruppe 6 und Werte von Warengruppe 5 über 1000€)
ware_ohne6_5gr1000<- umsatz %>%
filter(Warengruppe != 6)  %>%
filter(!(Warengruppe == 5 & Umsatz >= 1000)) %>%   #alles rausgefiltert wo 5 mehr Umsatz als 1000 Euro hat
group_by(wochentag, Warengruppe) %>%
=======
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
#Neue Spalte mit dem Namen Temperaturklassen hinzufügen
merge_um_wet$Temperaturklassen<-NA
# Klasseneinteilung in kalt (Temp<10), normla (Temp10-20) und warm (Temp>20)
merge_um_wet$Temperaturklassen <- "kalt"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 10 & merge_um_wet$Temperatur < 20] <- "normal"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 20] <- "warm"
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet_temp_klass.csv")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
#Laden der Bibliotheken
library(readr)
library(tidyverse)
#Datein installieren
install.packages("tidyverse")
#Laden der Bibliotheken
library(readr)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(dplyr)
#Einlesen der Daten
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
#Erstellung der Variable mit Jahr
umsatz$jahr <- year(umsatz$Datum)
#Tabelle für den Umsatz nach Warengruppen  und Jahren
ware_jahr<- umsatz %>%
group_by(jahr, Warengruppe) %>%
>>>>>>> eac6bcacf6fdb3dbaf20e3cfb860875c897e2243
summarise(
n=n(), #ist praktisch, weil es die Anzahl z?hlt
mean=mean(Umsatz),
sd=sd(Umsatz),
<<<<<<< HEAD
summe=sum(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
#Tage ordnen
ware_ohne6_5gr1000$wochentag <- factor(ware_ohne6_5gr1000$wochentag , levels= c("Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag","Sonntag"))
ware_ohne6_5gr1000[order(ware_ohne6_5gr1000$wochentag), ]
# nach Warengruppe an den Wochentagen den Umsatz plotten (ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro)
ggplot(ware_ohne6_5gr1000) +
geom_bar( aes(x=wochentag, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Wochentag")+
labs(caption = "ohne Warengruppe 6 und Warengruppe 5 über 1000 Euro, sind auch aus den Standardabweichungen, Durchschnitten etc. entfernt")
=======
summe=sum(Umsatz)) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# nach Warengruppe nach Jahren den Umsatz plotten
ggplot(ware_jahr) +
geom_bar( aes(x=Warengruppe, y=mean), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Warengruppe, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab("Durchschnitt (€)")+
facet_wrap(~jahr)+
ggtitle("Umsatz nach Warengruppe und Jahr")
View(merge_um_wet)
View(ware_jahr)
View(umsatz)
View(ware_jahr)
View(umsatz)
View(ware_jahr)
View(umsatz)
View(ware_jahr)
View(umsatz)
View(ware_jahr)
View(ware_jahr)
View(umsatz)
View(ware_jahr)
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
#Neue Spalte mit dem Namen Temperaturklassen hinzufügen
merge_um_wet$Temperaturklassen<-NA
# Klasseneinteilung in kalt (Temp<10), normla (Temp10-20) und warm (Temp>20)
merge_um_wet$Temperaturklassen <- "kalt"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 10 & merge_um_wet$Temperatur < 20] <- "normal"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 20] <- "warm"
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet_temp_klass.csv")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=Umsatz-ic, ymax=Umsatz+ic), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Jahr")
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperatur")
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, y=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperatur")
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperatur")
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperatur, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperatur")
# Temperaturklasse und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
geom_bar( aes(x=Temperaturklassen, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5) +
geom_errorbar( aes(x=Temperaturklassen, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperaturklasse")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_bar(stat = "identity")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Temperaturklassen, y=Umsatz)) +
geom_bar(stat = "identity")
# Berechnung von Mittelwerten, Standardabweichungen, Standardfehlern und Konfidenzintervallen
my_sum <- merge_um_wet %>%
group_by(Temperatur) %>%
summarise(
n=n(),
mean=mean(Umsatz),
sd=sd(Umsatz)
) %>%
mutate( se=sd/sqrt(n))  %>%
mutate( ic=se * qt((1-0.05)/2 + .5, n-1))
# Confidence Interval
ggplot(my_sum) +
geom_bar( aes(x=Temperatur, y=mean), stat="identity", fill="forestgreen", alpha=0.9) +
geom_errorbar( aes(x=Temperatur, ymin=mean-ic, ymax=mean+ic), width=0.4, colour="orange", alpha=0.9, size=0.1) +
#  scale_x_discrete(limits = c("Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"),
#                   labels = c("Montag", "Tuchtag", "CheapCheap", "Donnerstag", "Freitag", "Samstag", "Sonntag")) +
ggtitle("using confidence interval")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
library(tidyr)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatz <- read_csv("umsatzdaten_gekuerzt.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv",
col_types = cols(Datum = col_datetime(format = " %Y-%m-%d   "))) #Eingeben des Datums
sd_temp <- sd(wetter$Temperatur)
>>>>>>> 07e76088a69c2b8da4a397a6dc7061f5a0c651a7
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet_zeit <- merge(umsatz,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet_zeit, file = "merge_um_wet_zeit.csv")
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 10000000 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"), color="red")
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"), color="red")
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p_wetter-umsatz_gesamter_Zeitraum <--ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p_wetter-umsatz_gesamter_Zeitraum <-ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p_wetter-umsatz_gesamter_Zeitraum <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
View(p1)
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p1)
dev.copy(png,'Umsatz-Wetter_gesamter_Zeitraum.png')
dev.copy(png,"Umsatz-Wetter_gesamter_Zeitraum.png")
dev.copy(png,"Umsatz_Wetter_gesamter_Zeitraum.png")
dev.copy(png,"Umsatz_Wetter_gesamter_Zeitraum.png")
png('Umsatz_Wetter_gesamter_Zeitraum.png')
plot(p1)
dev.off()
View(p1)
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p1)
png('Umsatz_Wetter_gesamter_Zeitraum.png')
plot(p1)
dev.off()
<<<<<<< HEAD
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_bar(stat = "identity")+
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#            inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_bar(stat = "identity")
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
library(tidyr)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
#Neue Spalte mit dem Namen Temperaturklassen hinzufügen
merge_um_wet$Temperaturklassen<-NA
# Klasseneinteilung in kalt (Temp<10), normla (Temp10-20) und warm (Temp>20)
merge_um_wet$Temperaturklassen <- "kalt"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 10 & merge_um_wet$Temperatur < 20] <- "normal"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 20] <- "warm"
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet_temp_klass.csv")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
#Wissenschaftliche notation der Werte vermeiden
format(merge_um_wet, scientific = FALSE)
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
#  geom_bar( aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=1) +
geom_line( aes(x=Datum, y=Temperatur, stat="identity", fill="red", alpha=0.2)) +
#  geom_errorbar( aes(x=Temperatur, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperatur")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_bar(stat = "identity")
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#            inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
View(merge_um_wet)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5) +
geom_bar(stat = "identity")
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#            inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)
View(merge_um_wet)
View(merge_um_wet)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1)
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5),+
# Balkendiagramm erstellen
ggplot(merge_um_wet),+
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*10, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*1, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*2, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_bar(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*2, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Teamperatur)*2, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*2, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperaturklassen)*100, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_bar(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*200, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*50, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*25, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*30, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*35, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1),+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
plot(p3)
#Plot im Gruppenordner abspeichern
png('Umsatz_Temperaturklassen_gesam´ter_Zeitraum(nuesaklliert).png')
plot(p3)
dev.off()
=======
>>>>>>> eac6bcacf6fdb3dbaf20e3cfb860875c897e2243
>>>>>>> 07e76088a69c2b8da4a397a6dc7061f5a0c651a7
