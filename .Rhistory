#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet_zeit <- merge(umsatz,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet_zeit, file = "merge_um_wet_zeit.csv")
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 10000000 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"), color="red")
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"), color="red")
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p_wetter-umsatz_gesamter_Zeitraum <--ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p_wetter-umsatz_gesamter_Zeitraum <-ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p_wetter-umsatz_gesamter_Zeitraum <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
View(p1)
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p1)
dev.copy(png,'Umsatz-Wetter_gesamter_Zeitraum.png')
dev.copy(png,"Umsatz-Wetter_gesamter_Zeitraum.png")
dev.copy(png,"Umsatz_Wetter_gesamter_Zeitraum.png")
dev.copy(png,"Umsatz_Wetter_gesamter_Zeitraum.png")
png('Umsatz_Wetter_gesamter_Zeitraum.png')
plot(p1)
dev.off()
View(p1)
p1 <- ggplot(data = merge_um_wet_zeit, aes(x = Datum, y = Umsatz)) + #start plot by by plotting bars
geom_bar(stat = "identity") +
#plot line on same graph
# rate multiplied by 100 to get on same scale as bars
geom_line(color="red", data = merge_um_wet_zeit, aes(x = Datum, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p1)
png('Umsatz_Wetter_gesamter_Zeitraum.png')
plot(p1)
dev.off()
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_bar(stat = "identity")+
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#            inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_bar(stat = "identity")
# Installation der benötigten Packages
##install.packages("lubridate")
#install.packages("viridis")
#install.packages("hrbrthemes")
#install.packages("reshape2")
# Einbinden benötigter Bibliotheken
library(readr)
library(lubridate)
library(ggplot2)
library(dplyr)
library(viridis)
library(hrbrthemes)
library(reshape2)
library(tidyr)
# Einlesen der Umsatzdaten
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
umsatzdaten <- read_csv("umsatzdaten_gekuerzt.csv")
sd_umsatz <- sd(umsatzdaten$Umsatz)
#sd <- sqrt(var(umsatzdaten$Umsatz))
# Einlesen der Wetter (Temperatur)
setwd("C:/Users/Tobias/Documents/Data Science Gruppe 2 Teamordner")
wetter <- read_csv("wetter.csv")
sd_temp <- sd(wetter$Temperatur)
#Tabelle Umsatz und Wetter zusammenführen
merge_um_wet <- merge(umsatzdaten,wetter,by="Datum")
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet.csv")
#Neue Spalte mit dem Namen Temperaturklassen hinzufügen
merge_um_wet$Temperaturklassen<-NA
# Klasseneinteilung in kalt (Temp<10), normla (Temp10-20) und warm (Temp>20)
merge_um_wet$Temperaturklassen <- "kalt"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 10 & merge_um_wet$Temperatur < 20] <- "normal"
merge_um_wet$Temperaturklassen[merge_um_wet$Temperatur > 20] <- "warm"
# Als .csv im workspace abspeichern
write.csv(merge_um_wet, file = "merge_um_wet_temp_klass.csv")
ggplot(merge_um_wet, aes(x=Temperatur, y=Umsatz)) +
geom_point() +
geom_smooth(method=lm , color="red", fill="#69b3a2", se=TRUE) +
theme_ipsum()
hist(merge_um_wet$Temperatur,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Temperatur" , ylab="Anzahl der Tage")
hist(merge_um_wet$Umsatz,  main="" , breaks=30 , col=rgb(0.3,0.5,1,0.4) , xlab="Umsatz" , ylab="Anzahl der Tage")
plot(merge_um_wet$Umsatz , merge_um_wet$Temperatur,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Umsatz" , ylab="Temperatur" )
plot(merge_um_wet$Temperatur , merge_um_wet$Umsatz,  main="" , pch=20 , cex=0.4 , col=rgb(0.3,0.5,1,0.4)  , xlab="Temperatur" , ylab="Umsatz" )
#Wissenschaftliche notation der Werte vermeiden
format(merge_um_wet, scientific = FALSE)
# Temperatur und den Umsatz nach Warengruppen plotten
ggplot(merge_um_wet) +
#  geom_bar( aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=1) +
geom_line( aes(x=Datum, y=Temperatur, stat="identity", fill="red", alpha=0.2)) +
#  geom_errorbar( aes(x=Temperatur, ymin=Umsatz, ymax=Umsatz), width=0.4, colour="orange", alpha=0.9, size=1.5) +
ylab(" (€)")+
facet_wrap(~Warengruppe)+
ggtitle("Umsatz nach Warengruppe und Temperatur")
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur)) +
geom_bar(stat = "identity")
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#            inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
View(merge_um_wet)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5) +
geom_bar(stat = "identity")
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#            inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)
View(merge_um_wet)
View(merge_um_wet)
# Balkendiagramm erstellen
ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet, aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)+
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Umsatz, y=Temperatur), stat="identity", fill="forestgreen", alpha=0.5)
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)
#  geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1),
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1)
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5),+
# Balkendiagramm erstellen
ggplot(merge_um_wet),+
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Umsatz, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*10, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*1, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*2, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Temperatur, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_bar(color="red", data = merge_um_wet, aes(x = Temperatur, y = (Umsatz)*2, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Teamperatur)*2, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*2, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperaturklassen)*100, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen, group = 1))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_bar(color="red", data = merge_um_wet, aes(x = Datum, y = Temperaturklassen))
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*100, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*200, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*50, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*25, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*30, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*35, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))
#inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
#  scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1),+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
inherit.aes = FALSE) +
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1)+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
#plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
plot(p3)
# Balkendiagramm erstellen
p3<-ggplot(merge_um_wet)+
geom_bar(aes(x=Datum, y=Umsatz), stat="identity", fill="forestgreen", alpha=0.5)+
geom_line(color="red", data = merge_um_wet, aes(x = Datum, y = (Temperatur)*38, group = 1))+
#              inherit.aes = FALSE) +
#specify secondary axis
#apply inverse of above transformation to correctly scale secondary axis (/10000000)
scale_y_continuous(sec.axis = sec_axis(~./38, name = "Temp"))
plot(p3)
#Plot im Gruppenordner abspeichern
png('Umsatz_Temperaturklassen_gesam´ter_Zeitraum(nuesaklliert).png')
plot(p3)
dev.off()
